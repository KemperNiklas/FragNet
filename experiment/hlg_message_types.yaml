seml:
  executable: experiment_fragmentation.py
  name: hlg_message_types
  output_dir: experiment/logs/hlg_message_types
  project_root_dir: ~/substructure-gnns
#  description: A first test.

slurm:
  experiments_per_job: 5
  max_simultaneous_jobs: 4  # Restrict number of simultaneously running jobs per job array
  sbatch_options:
    gres: gpu:1       # num GPUs
    #mem: 16G          # memory
    mem: 32G          # memory
    #cpus-per-task: 4  # num cores
    cpus-per-task: 6  # num cores
    #time: 0-00:55     # max time, D-HH:MM
    time: 0-04:00
    #exclude: gpu12,gpu20

###### BEGIN PARAMETER CONFIGURATION ######

fixed:
  project_name: "HLG message types"
  trainer_params:
    max_epochs: 300
    testing: False
    min_lr: 1e-6

  data:
    dataset: "ZINC"
    loader_params:
      batch_size: 128
      num_workers: 4
    one_hot_edge_features: False
    one_hot_node_features: False
    
  model:
    model_type: "HLG"
    classification: False
    model_params:
      ordinal_encoding: True
      num_layers: 3
      num_layers_message_before: 0
      num_layers_message_after: 2
      hidden_channels: 128
      reduction: "sum"
      reduction_out: "sum"
      message_types:
        frag2edge: False
        atom2edge: True
        edge2edge: False
      #rbf: 20
      #reduction: "sum"
      #concat: False


  optimization:
    optimization_params:
      lr: 0.001
      #weight_decay: 5e-4
    loss: "mae"
    scheduler_parameters:
      mode: "min"
      factor: 0.5
      patience: 20

grid:
  data.fragmentation_method:
    type: choice
    options:
      #- []
      #- ["BBB", "fragment", 100]
      #- ["BRICS", "fragment", 100]
      #- ["PSM", "fragment", 100]
      #- ["Rings", "higher_level_graph_tree", {"vocab_size": 20}]
      - ["RingsPaths", "higher_level_graph_tree", {"vocab_size": 30, "max_ring": 15}]
      #- ["RingsEdges", "higher_level_graph_tree", {"vocab_size": 20}]
      # - ["RingsEdges", "higher_level_graph_node", {"vocab_size": 20}]
      # - ["Magnet", "higher_level_graph_tree", {"vocab_size": 100}]

random:
  samples: 3
  seed: 7059

  data.seed:
    type: randint
    min: 1
    max: 100    

NoHigherMessagePassing:
  fixed:
    model.model_params.message_types:
      frag2frag: False

WithFrag2Edge:
  fixed:
    model.model_params.message_types:
      frag2edge: True

Hierachical:
  fixed:
    model.model_params.message_types:
      atom2frag: False
      frag2atom: False
      frag2edge: True



    
  




    
      
    
# ZINC-full:
#   fixed:
#     data.dataset: "ZINC-full"
#     project_name: "fragmentation benchmark, ZINC-full"
#     model.model_params: 
#       hidden_channels: 128
#       dropout: 0
#       num_layers: 3

# HIV:
#   fixed:

#     project_name: "fragmentation benchmark, hiv"
#     trainer_params:
#       max_epochs: 200
#       testing: False
#       min_lr: 1e-5

#     data:
#       seed: 31
#       loader_params:
#         batch_size: 128
#         num_workers: 4
#         val_batch_size: 1000
#       dataset: "ogbg-molhiv"
      
#     model:
#       model_type: "HimpNet"
#       classification: True
#       model_params:
#         hidden_channels: 64
#         dropout: 0.5
#         num_layers: 2

#     optimization:
#       optimization_params:
#         lr: 0.0001
#         #weight_decay: 5e-4
#       scheduler_parameters:
#         mode: "min"
#         factor: 0.5
#         patience: 50
#       additional_metric: "auroc"

# peptides-struct:
#   fixed:
#     project_name: "fragmentation benchmark, peptides struct"
#     data.dataset: "peptides-struct"
#     optimization.scheduler_parameters:
#       mode: "min"
#       factor: 0.5
#       patience: 20
#     optimization.optimization_params:
#       lr: 0.001
#       weight_decay: 0
#     model.model_params: 
#       hidden_channels: 64
#       dropout: 0
#       num_layers: 3

# peptides-func:
#   fixed:
#     data.dataset: "peptides-func"
#     data.loader_params.val_batch_size: 3000
#     project_name: "fragmentation benchmark, peptides func"
#     optimization.scheduler_parameters:
#       mode: "min"
#       factor: 0.5
#       patience: 20
#     optimization.optimization_params:
#       lr: 0.0005
#       weight_decay: 5e-5
#     optimization.additional_metric: "ap"
#     model.model_params: 
#       hidden_channels: 64
#       dropout: 0.15
#       num_layers: 4
#       out_channels: 10
#     model.classification: True
#     trainer_params:
#       min_lr: 5e-6
    



# only_node_features:
#   # with the right git branch!
#   fixed:
#     model.model_params:
#       inter_message_passing: False
#       higher_message_passing: False
#       encoding_size_scaling: True
#       degree_scaling: False

# only_frag_rep:
#   fixed:
#     model.model_params:
#       hidden_channels: 128
#       dropout: 0
#       num_layers: 3
#       inter_message_passing: False
#       higher_message_passing: False
#       encoding_size_scaling: True
#       degree_scaling: False
# ZINC_full:
#   fixed:
#     project_name: "fragmentation encoding, full dataset"
#     data.dataset: "ZINC-full"
#   grid:
#     data.fragmentation_method:
#       type: choice
#       options:
#         #- []
#         #- ["BBB", "fragment", 100]
#         #- ["BRICS", "fragment", 100]
#         #- ["PSM", "fragment", 100]
#         #- ["Rings", "higher_level_graph_tree", {"vocab_size": 20}]
#         #- ["RingsPaths", "higher_level_graph_tree", {"vocab_size": 30, "max_ring": 15}]
#         #- ["RingsEdges", "higher_level_graph_tree", {"vocab_size": 20}]
#         # - ["RingsEdges", "higher_level_graph_node", {"vocab_size": 20}]
#         - ["Magnet", "higher_level_graph_tree", {"vocab_size": 100}] 

# magnet_full:
#   fixed:
#       project_name: "fragmentation encoding, full dataset"
#       data.dataset: "ZINC-full"
#       data.fragmentation_method: ["Magnet", "higher_level_graph_tree", {"vocab_size": 100}] 
#       model.model_params.inter_message_passing: True
#       model.model_params.higher_message_passing: True
#       model.model_params.encoding_size_scaling: False
#       model.model_params.degree_scaling: True

# baseline_full:
#   fixed:
#     project_name: "fragmentation encoding, full dataset"
#     data.dataset: "ZINC-full"
#     data.fragmentation_method: []
#     model.model_params.inter_message_passing: False
#     model.model_params.higher_message_passing: False
#     model.model_params.encoding_size_scaling: False
#     model.model_params.degree_scaling: True

# node_feature_comparison:
#   fixed:
#     data.fragmentation_method: ["Magnet", "node_feature", 100]
#     model.model_params.inter_message_passing: False